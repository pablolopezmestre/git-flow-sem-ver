#!/bin/sh
#
# Runs before git flow release start
#
# Positional arguments:
# $1    The version (including the version prefix)
# $2    The origin remote
# $3    The full branch name (including the release prefix)
# $4    The base from which this release is started
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
VERSION=$1
ORIGIN=$2
BRANCH=$3
BASE=$4

# Implement your script here.
#
# En este hook se comprueba si viene algún error (__check_errors) del filtro "filter-flow-hotfix-start-version".
# Sabremos que se produjo un error cuando el nombre de versión comience por "vERROR". "v" porque GitFlow manda el
# parámetro con el prefijo y "ERROR" porque así se ha establecido en el filtro si se produce un error.
# 
# A continuación comprobamos el prefijo (__check_prefix). Si es distinto de "v", se para la ejecución y se ofrece
# la opción de modificarlo automáticamente. Si no tiene formato correcto, también pararemos la ejecución.
#
# En caso de querer realizar una tag con un versionado diferente, tendrá que realizarse de forma manual.

SCRIPT_PATH=${0%/*}
FUNCTIONS="${SCRIPT_PATH}/inc/functions.sh"

if [ ! -f $FUNCTIONS ]; then
    echo "\033[0;31m$FUNCTIONS not found.\033[0m"
    exit 77
fi

source ${FUNCTIONS}

__check_errors

__check_prefix

# To terminate the git-flow action, return a non-zero exit code.
exit 0